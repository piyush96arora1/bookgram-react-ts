{"version":3,"sources":["Components/Dialog.tsx","Components/DialogUploader.tsx","Components/BookListProvider.tsx","Components/styles.tsx","App.tsx","index.tsx"],"names":["Components_Dialog","props","book","react","Dialog_default","a","open","openDialog","disableEscapeKeyDown","onClose","onSave","DialogTitle_default","bookData","bookName","DialogContent_default","className","src","bookAvatar","DialogContentText_default","bookExcerpt","TextField_default","type","onChange","e","author","target","value","bookModified","tslib_es6","defaultValue","review","map","x","Paper_default","style","borderColor","borderWidth","borderStyle","DialogActions_default","Button_default","onClick","Components_DialogUploader","_super","DialogUploader","_this","call","this","getFileFromInput","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleChange","event","val","name","b","state","setState","manageUploadedFile","binary","toString","handleFile","persist","Array","from","files","forEach","then","catch","reason","console","log","onDialogUploaderClose","bookId","likes","ratings","prototype","render","index_es","showUploader","id","label","accept","display","htmlFor","variant","color","component","margin","CloudUpload_default","Components_BookListProvider","BookListProvider","dialogOpner","onRatingClicked","y","preventDefault","bookArray","findIndex","prevState","push","showDialogBox","books","showDialog","deleteBook","filter","componentDidMount","data","cards","key","Favorite_default","Delete_default","styles","root","flexGrow","src_App_0","App","__webpack_require__","AppBar_default","position","Typography_default","gutterBottom","react_dom","document","getElementById"],"mappings":"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","file":"static/js/main.c7a2cfe6.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { IBook } from '../Models/Ibook'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n import TextField from '@material-ui/core/TextField';\r\n import Paper from '@material-ui/core/Paper';\r\n\r\ninterface IDialogProps {\r\n    bookData: IBook\r\n    openDialog: boolean\r\n    onSave: (x:any)=>void;\r\n}\r\n\r\n\r\nconst DialogViewer = (props: IDialogProps) => {\r\n    let book:IBook|null;\r\n    const onSave = () => {\r\n       return props.onSave(book)\r\n    }\r\n    const handleAuthorChange=(event:any)=>{\r\n        // event.preventDefault();\r\n        const author=event.target.value;\r\n        const bookModified:IBook={...props.bookData,author}\r\n        book=bookModified;\r\n    }\r\n   \r\n    return (\r\n        <Dialog open={props.openDialog}    disableEscapeKeyDown\r\n         onClose={()=>{props.onSave(book)}}>\r\n\r\n            <DialogTitle>{props.bookData.bookName}</DialogTitle>\r\n            <DialogContent>\r\n                <div className=\"layout-row layout-sm-column layout-xs-column\">\r\n                <div className=\"flex-60\">\r\n                    <img src={props.bookData.bookAvatar}/>\r\n                </div>\r\n                <div className=\"flex-40 layout-column layout-margin layout-padding  \">\r\n                <DialogContentText>{props.bookData.bookExcerpt}</DialogContentText>\r\n                <TextField type=\"text\" onChange={e=>handleAuthorChange(e)} defaultValue={props.bookData.author}  />\r\n                {props.bookData.review.map((x)=>\r\n                    <Paper style={{borderColor:'black',borderWidth:1,borderStyle:'dotted'}}>{x}</Paper>\r\n                )}\r\n                </div>\r\n                </div>\r\n                <DialogActions>\r\n\r\n                    <Button onClick={() => { onSave() }}>Save</Button>\r\n\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n\r\n    )\r\n\r\n}\r\nexport default DialogViewer","import { DialogContent, Dialog, Button, DialogActions } from \"@material-ui/core\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport * as React from 'react';\r\nimport { IBook } from '../Models/Ibook'\r\nimport './booklist.css'\r\nimport TextField from '@material-ui/core/TextField';\r\ninterface IUploaderState {\r\n    book: IBook;\r\n}\r\ninterface IUploaderProps {\r\n    showUploader: boolean;\r\n    onDialogUploaderClose: (x: any) => void\r\n}\r\n\r\nclass DialogUploader extends React.Component<IUploaderProps, IUploaderState>{\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { book: { bookAvatar: \"\", bookExcerpt: \"\", author: \"\", bookId: 0, bookName: \"\", likes: 0, ratings: 0, review: [] } }\r\n    }\r\n\r\n    public getFileFromInput = (file: any): Promise<any> => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => { resolve(reader.result); };\r\n            reader.onerror = reject;\r\n        });\r\n    }\r\n    public handleChange = (event: any) => {\r\n        const val = event.target.name;\r\n        const b: IBook = this.state.book;\r\n        b[val] = event.target.value;\r\n        this.setState({ book: b })\r\n    }\r\n\r\n    public manageUploadedFile = (binary: string) => {\r\n        const b: IBook = this.state.book;\r\n        b.bookAvatar = binary.toString();\r\n        this.setState({ book: b })\r\n    }\r\n\r\n    public handleFile = (event: any) => {\r\n        event.persist();\r\n        Array.from(event.target.files).forEach(file => {\r\n            this.getFileFromInput(file)\r\n                .then((binary: any) => {\r\n                    this.manageUploadedFile(binary);\r\n                }).catch((reason: any) => {\r\n                    console.log(`Error during upload ${reason}`);\r\n                    event.target.value = '';\r\n                });\r\n        });\r\n    }\r\n    public onSave = () => {\r\n        this.props.onDialogUploaderClose(this.state.book);\r\n    }\r\n    public render() {\r\n        return (<Dialog open={this.props.showUploader} disableEscapeKeyDown>\r\n            <div className=\"layout-row\">\r\n            <div>\r\n                <img id=\"imgid\" className=\"image_render\" src={this.state.book.bookAvatar} />\r\n                </div>\r\n                <div>\r\n                    <DialogContent>\r\n                        <TextField label=\"Book Id\" type=\"text\" value={this.state.book.bookId} name=\"bookId\" onChange={this.handleChange} />\r\n                        <TextField type=\"text\" label=\"Book name\" value={this.state.book.bookName} name=\"bookName\" onChange={this.handleChange} />\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <input\r\n                            accept=\"image/*,.jpg,.png,.jpeg\"\r\n                            style={{ display: 'none' }}\r\n                            id=\"file\"\r\n                            type=\"file\"\r\n                            onChange={this.handleFile} />\r\n\r\n                        <label htmlFor=\"file\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                component=\"span\"\r\n                                style={{ margin: 8 }}\r\n                            >\r\n                                <CloudUploadIcon />\r\n                                Upload\r\n                    </Button>\r\n                        </label>\r\n                        <Button style={{ color: 'red' }} onClick={() => { this.onSave() }}>Save</Button>\r\n\r\n                    </DialogActions>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </Dialog>)\r\n    }\r\n}\r\nexport default DialogUploader","import * as React from 'react'\r\nimport { IBook } from '../Models/Ibook'\r\nimport DialogViewer from './Dialog'\r\nimport './booklist.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport Delete from '@material-ui/icons/Delete'\r\nimport DialogUploader from './DialogUploader'\r\nimport Favorite from '@material-ui/icons/Favorite'\r\ninterface IBookProps {\r\n    bookData: IBook[]\r\n}\r\ninterface IbookState {\r\n    bookData: IBook[];\r\n    book: IBook | null;\r\n    showDialog: boolean;\r\n    showUploader: boolean;\r\n}\r\n// const styles={card:{minWidth:275,height:150}}\r\nclass BookListProvider extends React.Component<IBookProps, IbookState>{\r\n    public state: IbookState;\r\n    public props: IBookProps\r\n    constructor(props: IBookProps) {\r\n        super(props)\r\n        this.state = { bookData: [], showDialog: false, book: null, showUploader: false }\r\n\r\n    }\r\n    public componentDidMount() {\r\n\r\n        const data = this.props.bookData\r\n        this.setState({ bookData: data })\r\n    }\r\n    public dialogOpner = () => {\r\n        this.setState({ showUploader: true })\r\n    }\r\n    public onRatingClicked = (e: any, y: any) => {\r\n        e.preventDefault();\r\n        const bookArray: IBook[] = this.state.bookData\r\n        const bookIndex = this.state.bookData.findIndex((x => x.bookId === y))\r\n        bookArray[bookIndex].likes += 1\r\n        this.setState({ bookData: bookArray })\r\n\r\n    };\r\n    public onDialogUploaderClose = (book: IBook) => {\r\n        if (book.bookId !== 0) {\r\n            const prevState = this.state.bookData;\r\n            prevState.push(book);\r\n            this.setState({ bookData: prevState, showUploader: false })\r\n\r\n        }\r\n        else {\r\n            this.setState({ showUploader: false })\r\n        }\r\n    }\r\n\r\n    public showDialogBox = (books: IBook) => {\r\n        this.setState({ showDialog: true, book: books })\r\n\r\n        //  return ()\r\n    }\r\n    public deleteBook = (x: any) => {\r\n        const book = this.state.bookData.filter(b => b.bookId !== x)\r\n        this.setState({ bookData: book })\r\n    }\r\n    public onSave = (book: IBook) => {\r\n        if (book != null) {\r\n            const bookArray: IBook[] = this.state.bookData\r\n            const bookIndex = this.state.bookData.findIndex((x => x.bookId === book.bookId))\r\n            bookArray[bookIndex].author = book.author;\r\n            this.setState({ bookData: bookArray, showDialog: false })\r\n        }\r\n        this.setState({ showDialog: false })\r\n    }\r\n    public render() {\r\n        const cards = this.state.bookData.map((x) =>\r\n\r\n            <div className=\"\" key={x.bookId}>\r\n                <img src={x.bookAvatar} />\r\n                <div className=\"card-content\">\r\n                    <span>{x.author} {x.likes}</span>\r\n                    <p>{x.bookName}</p>\r\n                    <div className=\"layout-row\">\r\n                        <Button onClick={(e) => this.onRatingClicked(e, x.bookId)}> <Favorite /> </Button>\r\n                        <Button onClick={() => { this.showDialogBox(x) }}>Open</Button>\r\n                        <Button onClick={() => { this.deleteBook(x.bookId) }}>  <Delete /></Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n        return (<React.Fragment>\r\n            {this.state.book && this.state.showDialog && <DialogViewer onSave={this.onSave} bookData={this.state.book} openDialog={true}></DialogViewer>}\r\n            <div className=\"wrapper layout-row layout-row layout-align-space-around-center\">{cards}</div>\r\n            <Button onClick={this.dialogOpner}>Add new Book Details</Button>\r\n            {this.state.showUploader && <DialogUploader showUploader={true} onDialogUploaderClose={this.onDialogUploaderClose}></DialogUploader>}\r\n        </React.Fragment>)\r\n    }\r\n}\r\n\r\nexport default BookListProvider","export const styles = {\r\n    root: {\r\n    flexGrow: 1\r\n  }\r\n}","import * as React from 'react';\r\nimport './App.css';\r\nimport { IBook } from './Models/Ibook'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BookListProvider from './Components/BookListProvider'\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { styles } from './Components/styles'\r\nclass App extends React.Component {\r\n  public render() {\r\n    const books: IBook[] = require('./Data/Book.json').books\r\n    // tslint:disable-next-line:no-console\r\n    // console.log(\"hi\"+books.author)\r\n    return (\r\n      <div className=\"App\">\r\n        <AppBar color=\"primary\" style={styles.root} position=\"relative\">\r\n\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Books\r\n            </Typography>\r\n\r\n\r\n\r\n        </AppBar>\r\n        <BookListProvider bookData={books} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\n// registerServiceWorker();\n"],"sourceRoot":""}