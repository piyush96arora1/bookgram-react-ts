{"version":3,"sources":["Components/Dialog.tsx","Components/DialogUploader.tsx","Components/BookListProvider.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["Components_Dialog","props","book","react","Dialog_default","a","open","openDialog","disableEscapeKeyDown","onClose","onSave","DialogTitle_default","bookData","bookName","DialogContent_default","className","src","bookAvatar","DialogContentText_default","bookExcerpt","TextField_default","type","onChange","e","author","target","value","bookModified","tslib_es6","defaultValue","review","map","x","Paper_default","style","borderColor","borderWidth","borderStyle","DialogActions_default","Button_default","onClick","Components_DialogUploader","_super","DialogUploader","_this","call","this","getFileFromInput","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleChange","event","val","name","b","state","setState","manageUploadedFile","binary","toString","handleFile","persist","Array","from","files","forEach","then","catch","reason","console","log","onDialogUploaderClose","bookId","likes","ratings","prototype","render","index_es","showUploader","scroll","id","label","accept","display","htmlFor","variant","color","component","margin","CloudUpload_default","Components_BookListProvider","BookListProvider","dialogOpner","onRatingClicked","y","bookArray","findIndex","prevState","push","showDialogBox","books","showDialog","deleteBook","filter","componentDidMount","data","cards","Delete_default","src_App_0","App","__webpack_require__","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","react_dom","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dba52019.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { IBook } from '../Models/Ibook'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n import TextField from '@material-ui/core/TextField';\r\n import Paper from '@material-ui/core/Paper';\r\n\r\ninterface IDialogProps {\r\n    bookData: IBook\r\n    openDialog: boolean\r\n    onSave: (x:any)=>void;\r\n}\r\n\r\n\r\nconst DialogViewer = (props: IDialogProps) => {\r\n    let book:IBook|null;\r\n    const onSave = () => {\r\n       return props.onSave(book)\r\n    }\r\n    const handleAuthorChange=(event:any)=>{\r\n        // event.preventDefault();\r\n        const author=event.target.value;\r\n        const bookModified:IBook={...props.bookData,author}\r\n        book=bookModified;\r\n    }\r\n   \r\n    return (\r\n        <Dialog open={props.openDialog}    disableEscapeKeyDown\r\n         onClose={()=>{props.onSave(book)}}>\r\n\r\n            <DialogTitle>{props.bookData.bookName}</DialogTitle>\r\n            <DialogContent>\r\n                <div className=\"layout-row layout-sm-column\">\r\n                <div className=\"flex-60\">\r\n                    <img src={props.bookData.bookAvatar}/>\r\n                </div>\r\n                <div className=\"flex-40 layout-column layout-margin layout-padding  \">\r\n                <DialogContentText>{props.bookData.bookExcerpt}</DialogContentText>\r\n                <TextField type=\"text\" onChange={e=>handleAuthorChange(e)} defaultValue={props.bookData.author}  />\r\n                {props.bookData.review.map((x)=>\r\n                    <Paper style={{borderColor:'black',borderWidth:1,borderStyle:'dotted'}}>{x}</Paper>\r\n                )}\r\n                </div>\r\n                </div>\r\n                <DialogActions>\r\n\r\n                    <Button onClick={() => { onSave() }}>Save</Button>\r\n\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n\r\n    )\r\n\r\n}\r\nexport default DialogViewer","import { DialogContent, Dialog, Button, DialogActions } from \"@material-ui/core\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport * as React from 'react';\r\nimport { IBook } from '../Models/Ibook'\r\nimport './booklist.css'\r\nimport TextField from '@material-ui/core/TextField';\r\ninterface IUploaderState{\r\n    book:IBook;\r\n}\r\ninterface IUploaderProps{\r\n    showUploader:boolean;\r\n    onDialogUploaderClose:(x:any)=>void\r\n}\r\n\r\nclass DialogUploader extends React.Component<IUploaderProps,IUploaderState>{\r\n    \r\n    constructor(props:any)\r\n    {\r\n        super(props);\r\n        this.state={book:{ bookAvatar: \"\", bookExcerpt: \"\", author: \"\", bookId: 0, bookName: \"\", likes: 0, ratings: 0, review: [] }}\r\n    }\r\n    \r\n    public getFileFromInput = (file: any): Promise<any> => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => { resolve(reader.result); };\r\n            reader.onerror = reject;\r\n        });\r\n    }\r\n    public handleChange=(event:any)=>{\r\n        const val=event.target.name;\r\n        const b:IBook=this.state.book;\r\n        b[val]=event.target.value;\r\n        this.setState({book:b})\r\n    }\r\n\r\n    public manageUploadedFile = (binary: string) => {\r\n       const b:IBook=this.state.book;\r\n       b.bookAvatar=binary.toString();\r\n        this.setState({book:b})\r\n    }\r\n\r\n    public handleFile = (event: any) => {\r\n        event.persist();\r\n        Array.from(event.target.files).forEach(file => {\r\n           this.getFileFromInput(file)\r\n                .then((binary: any) => {\r\n                   this.manageUploadedFile(binary);\r\n                }).catch((reason: any) => {\r\n                    console.log(`Error during upload ${reason}`);\r\n                    event.target.value = '';\r\n                });\r\n        });\r\n    }\r\n    public onSave = () => {\r\n        this.props.onDialogUploaderClose(this.state.book);\r\n    }\r\n   public render(){\r\n    return (<Dialog open={this.props.showUploader} scroll=\"paper\"  disableEscapeKeyDown>\r\n        <div className=\"layout-row\">\r\n            <div className=\"image_render\">\r\n        <img id=\"imgid\" src={this.state.book.bookAvatar} />\r\n        </div>\r\n        <div>\r\n        <DialogContent>\r\n\r\n            \r\n\r\n\r\n<TextField label=\"Book Id\" type=\"text\" value={this.state.book.bookId}  name=\"bookId\" onChange={this.handleChange}/>\r\n<TextField type=\"text\"  label=\"Book name\" value={this.state.book.bookName}  name=\"bookName\" onChange={this.handleChange}/>\r\n\r\n</DialogContent>\r\n<DialogActions>\r\n<input\r\n    accept=\"image/*,.jpg,.png,.jpeg\"\r\n    style={{ display: 'none' }}\r\n    id=\"file\"\r\n    type=\"file\"\r\n    onChange={this.handleFile} />\r\n\r\n<label htmlFor=\"file\">\r\n    <Button\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        component=\"span\"\r\n        style={{ margin: 8 }}\r\n    >\r\n        <CloudUploadIcon />\r\n        Upload\r\n                    </Button>\r\n</label>\r\n<Button style={{color:'red'}} onClick={() => { this.onSave() }}>Save</Button>\r\n\r\n</DialogActions>\r\n        </div>\r\n        </div>\r\n       \r\n      \r\n\r\n    </Dialog>)\r\n}\r\n}\r\nexport default DialogUploader","import * as React from 'react'\r\nimport { IBook } from '../Models/Ibook'\r\nimport DialogViewer from './Dialog'\r\nimport './booklist.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport Delete from '@material-ui/icons/Delete'\r\nimport DialogUploader from './DialogUploader'\r\ninterface IBookProps {\r\n    bookData: IBook[]\r\n}\r\ninterface IbookState {\r\n    bookData: IBook[];\r\n    book:IBook|null;\r\n    showDialog: boolean;\r\n    showUploader:boolean;\r\n}\r\n// const styles={card:{minWidth:275,height:150}}\r\nclass BookListProvider extends React.Component<IBookProps, IbookState>{\r\n    public state: IbookState;\r\n    public props: IBookProps\r\n    constructor(props: IBookProps) {\r\n        super(props)\r\n        this.state = { bookData: [], showDialog: false,book:null,showUploader:false}\r\n\r\n    }\r\n    public componentDidMount() {\r\n\r\n        const data = this.props.bookData\r\n        this.setState({ bookData: data })\r\n    }\r\n    public dialogOpner=()=>{\r\n        this.setState({showUploader:true})\r\n    }\r\n    public onRatingClicked = (e: any, y: any) => {\r\n        const bookArray: IBook[] = this.state.bookData\r\n        const bookIndex = this.state.bookData.findIndex((x => x.bookId === y))\r\n        bookArray[bookIndex].likes += 1\r\n        this.setState({ bookData: bookArray })\r\n\r\n    };\r\n    public onDialogUploaderClose=(book:IBook)=>{\r\n        if(book.bookId!==0){\r\n        const prevState=this.state.bookData;\r\n        prevState.push(book);\r\n        this.setState({bookData:prevState,showUploader:false})\r\n    \r\n    }\r\nelse{\r\nthis.setState({showUploader:false})}\r\n}\r\n\r\n    public showDialogBox = (books: IBook) => {\r\n        this.setState({ showDialog: true,book:books})\r\n    \r\n      //  return ()\r\n    }\r\n    public deleteBook=(x:any)=>{\r\n        const book=this.state.bookData.filter(b=>b.bookId!==x)\r\n        this.setState({bookData:book})\r\n    }\r\n    public onSave =(book:IBook)=>{\r\n        if(book!=null)\r\n       {\r\n        const bookArray: IBook[] = this.state.bookData\r\n        const bookIndex = this.state.bookData.findIndex((x => x.bookId === book.bookId))\r\n        bookArray[bookIndex].author=book.author;\r\n        this.setState({bookData:bookArray,showDialog:false})\r\n       }\r\n       this.setState({showDialog:false})\r\n    }\r\n    public render() {\r\n        const cards = this.state.bookData.map((x) =>\r\n            <div className=\"card\">\r\n                <img src={x.bookAvatar} />\r\n                <div className=\"card-content\">\r\n                    <span>{x.author}</span>\r\n                    <p>{x.bookName}</p>\r\n                    <span onClick={(e) => this.onRatingClicked(e, x.bookId)}>{x.likes}</span>\r\n                    <Button onClick={()=>{this.showDialogBox(x)}}>Open</Button>\r\n                  <Button onClick={()=>{this.deleteBook(x.bookId)}}>  <Delete/></Button>\r\n                </div>\r\n            </div>\r\n        )\r\n        return (<React.Fragment>\r\n         {this.state.book && this.state.showDialog && <DialogViewer onSave={this.onSave} bookData={this.state.book} openDialog={true}></DialogViewer>}\r\n            <div className=\"wrapper\">{cards}</div>\r\n            <Button onClick={this.dialogOpner}>Add new Book Details</Button>\r\n           {this.state.showUploader &&<DialogUploader showUploader={true} onDialogUploaderClose={this.onDialogUploaderClose}></DialogUploader>}\r\n        </React.Fragment>)\r\n    }\r\n}\r\n\r\nexport default BookListProvider","import * as React from 'react';\r\nimport './App.css';\r\nimport { IBook } from './Models/Ibook'\r\nimport BookListProvider from './Components/BookListProvider'\r\nclass App extends React.Component {\r\n  public render() {\r\n    const books: IBook[] = require('./Data/Book.json').books\r\n    // tslint:disable-next-line:no-console\r\n    // console.log(\"hi\"+books.author)\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\"></header>\r\n        <BookListProvider bookData={books} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}